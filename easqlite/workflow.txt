Workflow for branching and tasks:

The structure can vary from project to project. What we have for EaSQLite is a master branch, devel branch, and various branches for tasks certain people are working on. Master should only contain a stable version of the project, while devel will be continuing work on a new version.

1. There will be a task in Freedcamp (The task I have is "Create DatabaseHandler")

3. Make sure to do the following:

git pull origin master
git pull origin devel

To get any updates from others.

4. Now in the Project directory (for us it is EaSQLite), create a branch using the following statement:

git checkout -b [initials]-[3 word description]

For instance,

git checkout -b sk-create-db-handler

Essentially make a new branch where you have your initials, and a 2-3 word short description of the task.

5. Now do a bunch of work on your branch. If this spans multiple days, occasionally merge with devel to update your branch with changes. This will minimize merge conflicts later on:

git pull origin devel
git merge devel

6. When you're satisfied with your branch, checkout to devel and then merge the branch:

git checkout devel
git merge sk-create-db-handler

7. If you have tests (unit and/or UI), then run those locally in devel to make sure you didn't screw stuff up. If you push buggy code up, your team will skewer you.

8. Push up to devel:
git push origin devel
